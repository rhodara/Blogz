'''Multiples of 3 and 5
Problem 1 
If we list all the natural numbers below 10 that are multiples of 3 or 5, 
we get 3, 5, 6 and 9. The sum of these multiples is 23.
Find the sum of all the multiples of 3 or 5 below 1000.'''
def euler1():
    sum = 0
    for i in range (1000):
        if i % 3 == 0 or i% 5 ==0:
            sum+=i
    print (sum)
#2 Each new term in the Fibonacci sequence is generated by adding the 
# previous two terms. By starting with 1 and 2, the first 10 terms will be:
#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

#By considering the terms in the Fibonacci sequence whose values do not 
# exceed four million, find the sum of the even-valued terms.
def euler2(max):
    prev = 1
    next = 2
    #listofFib = "1 2"
    sum=1
    accum=2
    while sum < max:
        print("???")
        sum = prev + next
        prev = next
        next = sum        
        #listofFib = listofFib + " "+str(sum)
        if (sum%2)==0:
            accum = accum + sum
    return (accum)
    #print (listofFib)
"""Largest prime factor
Problem 3 
The prime factors of 13195 are 5, 7, 13 and 29.
What is the largest prime factor of the number 600851475143 ?"""
def isPrime(n):
    
    f=1
    count = 0
    while f<=(n**(1/2.0)):
        if n%f==0:
            count+=1
        f+=1
    if count==1:
        return True
    return False
    

def euler3(target):
    factor = 1
    max = 1
    while factor<(target**(1/2.0)):
        if target % factor == 0:
            #print (factor)
            if isPrime(factor) and factor >max :
                #print(max, factor)
                max = factor

        factor+=1
    return max
        
'''Largest palindrome product
Problem 4 
A palindromic number reads the same both ways. 
The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 Ã— 99.
Find the largest palindrome made from the product of two 3-digit numbers.'''
'''euler1()
print(euler2(4000000))
print(600851475143)
print(euler3(600851475143))'''
def euler4():
    num1=999
    num2=999
    final= int(num1/2)
    max=0
    nWord=0
    for j in range (num2,final,-1):
        for n in range(num1,final,-1):
            product= n * j
            #print(product)
            numberWord=str(product)
            end = len(numberWord)-1
            palindrome=True
            i=0
            while i<=len(numberWord)/2 and (numberWord[i]==numberWord[end]):
                #print (numberWord[i],numberWord[end])
                i+=1
                end-=1
            if i-1 == (len(numberWord))/2:
                print (numberWord)
                palindrome=True
                nWord = int(numberWord)
                if nWord >max:
                    max = nWord
    return max

       
    
print(euler4())

print ("done")